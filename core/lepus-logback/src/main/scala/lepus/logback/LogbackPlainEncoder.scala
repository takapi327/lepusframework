/** This file is part of the Lepus Framework. For the full copyright and license information, please view the LICENSE
  * file that was distributed with this source code.
  */

package lepus.logback

import ch.qos.logback.core.CoreConstants
import ch.qos.logback.classic.spi.ILoggingEvent

/** Outputs logs generated by the system and applications in Plain text format. Configure logback.groovy,
  * logback-test.xml, or logback.xml on the application classpath as follows
  *
  * For example:
  * {{{
  *   <configuration>
  *     <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
  *       <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
  *         <layout class="lepus.logback.LogbackPlainEncoder" />
  *       </encoder>
  *     </appender>
  *
  *     <root level="INFO">
  *       <appender-ref ref="STDOUT" />
  *     </root>
  *   </<configuration>
  * }}}
  */
class LogbackPlainEncoder extends BaseEncoder:
  override def doLayout(event: ILoggingEvent): String =
    val sbuf: StringBuffer = StringBuffer(128)
    sbuf.append(timeStampToLocalDateTime(event.getTimeStamp).toString)
    sbuf.append(" ")
    sbuf.append(colorLevel(event))
    sbuf.append(" [")
    sbuf.append(event.getThreadName)
    sbuf.append("] ")
    if (!event.getMarkerList.isEmpty) {
      sbuf.append(" ")
      sbuf.append(event.getMarkerList)
      sbuf.append(" ")
    }
    sbuf.append(event.getLoggerName)
    sbuf.append(" - ")
    sbuf.append(event.getFormattedMessage)
    if (event.getThrowableProxy != null) {
      sbuf.append(" - ")
      sbuf.append(event.getThrowableProxy)
    }
    sbuf.append(CoreConstants.LINE_SEPARATOR)
    sbuf.toString
